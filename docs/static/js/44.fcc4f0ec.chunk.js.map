{"version":3,"sources":["../static/js/44.fcc4f0ec.chunk.js","../node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["webpackJsonp","579","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","conf","language","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","instructions","instructionAfter","variableAfter","variable","tokenizer","root","include","token","next","arguments","cases","@eos","@default","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YCLAC,QAAAC,eAAAH,EAAA,cAAAI,OAAA,IAAAH,EAAAI,EAAAL,EAAA,wBAAAM,KAAAL,EAAAI,EAAAL,EAAA,4BAAAO,IAKO,IAAAD,IACPE,WACA,IAAW,MACX,UACA,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,OAGFJ,GACPM,aAAA,GACAC,aAAA,cACAC,aAAA,oHACAC,iBAAA,UACAC,cAAA,MACAC,SAAA,cACAC,WACAC,OACaC,QAAA,gBACAA,QAAA,aACb,uCAAsDC,MAAA,GAAAC,KAAA,oBACtD,+BAEAR,eACA,8CAA8DO,MAAA,WAAAC,KAAA,iBAC9D,2CAEAC,YACaH,QAAA,gBACAA,QAAA,aACb,eACAI,OACAC,QAAiCJ,MAAA,WAAAC,KAAA,WACjCI,WAAA,eAGA,MACAF,OACAC,OAAA,GACAC,WAAA,OAGA,KACAF,OACAC,QAAiCJ,MAAA,GAAAC,KAAA,WACjCI,WAAA,OAKAC,aACA,OACAH,OACAC,QAAiCJ,MAAA,GAAAC,KAAA,WACjCI,WAAA,OAIAE,UACA,gCAGAC,UACA,0BACA,6BACA,0BACA,gCAEAC,aACA,YACAN,OACAC,QAAiCJ,MAAA,SAAAC,KAAA,WACjCI,WAAA,aAGA,wBACA,0BACA,sBACA,2BACA,iBACA,yBAEAK,gBACA,YACAP,OACAC,QAAiCJ,MAAA,SAAAC,KAAA,WACjCI,WAAA,aAGA,wBACA,0BACA,sBACA,2BACA,iBACA","file":"static/js/44.fcc4f0ec.chunk.js","sourcesContent":["webpackJsonp([44],{\n\n/***/ 579:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.dockerfile',\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\n    instructionAfter: /ONBUILD/,\n    variableAfter: /ENV/,\n    variable: /\\${?[\\w]+}?/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\n            ['', 'keyword', '@instructions']\n        ],\n        instructions: [\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\n            [/(@instructions)/, 'keyword', '@arguments']\n        ],\n        arguments: [\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [/(@variable)/, {\n                    cases: {\n                        '@eos': { token: 'variable', next: '@popall' },\n                        '@default': 'variable'\n                    }\n                }],\n            [/\\\\/, {\n                    cases: {\n                        '@eos': '',\n                        '@default': ''\n                    }\n                }],\n            [/./, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        // Deal with white space, including comments\n        whitespace: [\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        comment: [\n            [/(^#.*$)/, 'comment', '@popall']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@stringBody'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/[^\\\\\\$']/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/[^\\\\\\$\"]/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ]\n    }\n};\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/44.fcc4f0ec.chunk.js","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.dockerfile',\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\n    instructionAfter: /ONBUILD/,\n    variableAfter: /ENV/,\n    variable: /\\${?[\\w]+}?/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\n            ['', 'keyword', '@instructions']\n        ],\n        instructions: [\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\n            [/(@instructions)/, 'keyword', '@arguments']\n        ],\n        arguments: [\n            { include: '@whitespace' },\n            { include: '@strings' },\n            [/(@variable)/, {\n                    cases: {\n                        '@eos': { token: 'variable', next: '@popall' },\n                        '@default': 'variable'\n                    }\n                }],\n            [/\\\\/, {\n                    cases: {\n                        '@eos': '',\n                        '@default': ''\n                    }\n                }],\n            [/./, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        // Deal with white space, including comments\n        whitespace: [\n            [/\\s+/, {\n                    cases: {\n                        '@eos': { token: '', next: '@popall' },\n                        '@default': ''\n                    }\n                }],\n        ],\n        comment: [\n            [/(^#.*$)/, 'comment', '@popall']\n        ],\n        // Recognize strings, including those broken across lines with \\ (but not without)\n        strings: [\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@stringBody'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/[^\\\\\\$']/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/'$/, 'string', '@popall'],\n            [/'/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ],\n        dblStringBody: [\n            [/[^\\\\\\$\"]/, {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }],\n            [/\\\\./, 'string.escape'],\n            [/\"$/, 'string', '@popall'],\n            [/\"/, 'string', '@pop'],\n            [/(@variable)/, 'variable'],\n            [/\\\\$/, 'string'],\n            [/$/, 'string', '@popall']\n        ]\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js\n// module id = 579\n// module chunks = 44"],"sourceRoot":""}